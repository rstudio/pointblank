# Generated by roxygen2: do not edit by hand

S3method(print,action_levels)
S3method(print,examination_page)
S3method(print,ptblank_agent)
S3method(print,ptblank_informant)
S3method(print,ptblank_multiagent)
S3method(print,x_list_i)
S3method(print,x_list_n)
export("%>%")
export(action_levels)
export(activate_steps)
export(affix_date)
export(affix_datetime)
export(all_passed)
export(between)
export(case_when)
export(col_anomaly_check)
export(col_exists)
export(col_is_character)
export(col_is_date)
export(col_is_factor)
export(col_is_integer)
export(col_is_logical)
export(col_is_numeric)
export(col_is_posix)
export(col_schema)
export(col_schema_match)
export(col_vals_between)
export(col_vals_decreasing)
export(col_vals_equal)
export(col_vals_expr)
export(col_vals_gt)
export(col_vals_gte)
export(col_vals_in_set)
export(col_vals_increasing)
export(col_vals_lt)
export(col_vals_lte)
export(col_vals_not_between)
export(col_vals_not_equal)
export(col_vals_not_in_set)
export(col_vals_not_null)
export(col_vals_null)
export(col_vals_regex)
export(conjointly)
export(contains)
export(create_agent)
export(create_informant)
export(create_multiagent)
export(creds)
export(creds_anonymous)
export(creds_file)
export(creds_key)
export(db_tbl)
export(deactivate_steps)
export(email_blast)
export(email_create)
export(ends_with)
export(everything)
export(expect_col_exists)
export(expect_col_is_character)
export(expect_col_is_date)
export(expect_col_is_factor)
export(expect_col_is_integer)
export(expect_col_is_logical)
export(expect_col_is_numeric)
export(expect_col_is_posix)
export(expect_col_schema_match)
export(expect_col_vals_between)
export(expect_col_vals_decreasing)
export(expect_col_vals_equal)
export(expect_col_vals_expr)
export(expect_col_vals_gt)
export(expect_col_vals_gte)
export(expect_col_vals_in_set)
export(expect_col_vals_increasing)
export(expect_col_vals_lt)
export(expect_col_vals_lte)
export(expect_col_vals_not_between)
export(expect_col_vals_not_equal)
export(expect_col_vals_not_in_set)
export(expect_col_vals_not_null)
export(expect_col_vals_null)
export(expect_col_vals_regex)
export(expect_conjointly)
export(expect_rows_distinct)
export(expr)
export(get_agent_report)
export(get_agent_x_list)
export(get_data_extracts)
export(get_informant_report)
export(get_multiagent_report)
export(get_sundered_data)
export(has_columns)
export(incorporate)
export(info_columns)
export(info_section)
export(info_snippet)
export(info_tabular)
export(interrogate)
export(log4r_step)
export(matches)
export(read_disk_multiagent)
export(remove_read_fn)
export(remove_steps)
export(remove_tbl)
export(rows_distinct)
export(scan_data)
export(set_read_fn)
export(set_tbl)
export(small_table_sqlite)
export(snip_highest)
export(snip_list)
export(snip_lowest)
export(starts_with)
export(stock_msg_body)
export(stock_msg_footer)
export(stop_if_not)
export(stop_on_fail)
export(test_col_exists)
export(test_col_is_character)
export(test_col_is_date)
export(test_col_is_factor)
export(test_col_is_integer)
export(test_col_is_logical)
export(test_col_is_numeric)
export(test_col_is_posix)
export(test_col_schema_match)
export(test_col_vals_between)
export(test_col_vals_decreasing)
export(test_col_vals_equal)
export(test_col_vals_expr)
export(test_col_vals_gt)
export(test_col_vals_gte)
export(test_col_vals_in_set)
export(test_col_vals_increasing)
export(test_col_vals_lt)
export(test_col_vals_lte)
export(test_col_vals_not_between)
export(test_col_vals_not_equal)
export(test_col_vals_not_in_set)
export(test_col_vals_not_null)
export(test_col_vals_null)
export(test_col_vals_regex)
export(test_conjointly)
export(test_rows_distinct)
export(validate_rmd)
export(vars)
export(warn_on_fail)
export(x_read_disk)
export(x_write_disk)
export(yaml_agent_interrogate)
export(yaml_agent_show_exprs)
export(yaml_agent_string)
export(yaml_informant_incorporate)
export(yaml_read_agent)
export(yaml_read_informant)
export(yaml_write)
import(rlang)
importFrom(blastula,creds)
importFrom(blastula,creds_anonymous)
importFrom(blastula,creds_file)
importFrom(blastula,creds_key)
importFrom(dplyr,between)
importFrom(dplyr,case_when)
importFrom(dplyr,vars)
importFrom(magrittr,"%>%")
importFrom(rlang,expr)
importFrom(tidyselect,contains)
importFrom(tidyselect,ends_with)
importFrom(tidyselect,everything)
importFrom(tidyselect,matches)
importFrom(tidyselect,starts_with)
